(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{671:function(t,s,e){"use strict";e.r(s);var a=e(2),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"react生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react生命周期"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/react-component.html"}},[t._v("React生命周期")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/1024167/1614737315596-e9065b9b-2673-4661-86bc-4e07defd06d4.png#align=left&display=inline&height=485&margin=%5Bobject%20Object%5D&name=image.png&originHeight=647&originWidth=1361&size=221101&status=done&style=stroke&width=1021",alt:"image.png"}})]),t._v(" "),e("p",[e("a",{attrs:{name:"Xt1wv"}})]),t._v(" "),e("h3",{attrs:{id:"初始化挂载阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化挂载阶段"}},[t._v("#")]),t._v(" 初始化挂载阶段")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("getDefaultProps")]),t._v(":获取实例的默认属性 (只支持 "),e("code",[t._v("React.createClass")]),t._v(" 创建的组件)")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("getInitialState")]),t._v(":获取每个实例的初始化状态 (只支持"),e("code",[t._v("React.createClass")]),t._v("创建的组件)")])]),t._v(" "),e("li",[e("p",[e("strong",[e("code",[t._v("constructor")]),t._v(" "),e("strong",[t._v("函数中")]),t._v("不要调用 "),e("code",[t._v("setState()")]),t._v(" 方法")]),t._v("。如果你的组件需要使用内部 state，请直接在构造函数中为 "),e("strong",[e("code",[t._v("this.state")]),t._v(" 赋值初始 state")])]),t._v(" "),e("ul",[e("li",[t._v("通过给 "),e("code",[t._v("this.state")]),t._v(" 赋值对象来初始化内部 state")]),t._v(" "),e("li",[t._v("为事件处理函数绑定实例")])])])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不要在这里调用 this.setState()")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" counter"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleClick "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleClick")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("ul",[e("li",[e("p",[e("code",[t._v("componentWillMount")]),t._v("：在组件挂载之前被调用。它在 "),e("code",[t._v("render()")]),t._v(" 之前调用，因此在此方法中同步调用 "),e("code",[t._v("setState()")]),t._v(" 不会触发额外渲染，在新版本中建议使用   UNSAFE_componentWillMount")])]),t._v(" "),e("li",[e("p",[e("strong",[e("code",[t._v("render")])]),t._v("："),e("strong",[t._v("组件在这里根据元素的类型生成虚拟DOM节点")])])]),t._v(" "),e("li",[e("p",[e("strong",[e("code",[t._v("componentDidMount")])]),t._v("："),e("strong",[t._v("会在组件挂载后（插入 DOM 树中）立即调用。依赖于 DOM 节点的初始化应该放在这里。如需通过网络请求获取数据，此处是实例化请求的好地方")])])])]),t._v(" "),e("p",[e("a",{attrs:{name:"alioK"}})]),t._v(" "),e("h3",{attrs:{id:"运行中状态-当组件的props-或者state-更新之后"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行中状态-当组件的props-或者state-更新之后"}},[t._v("#")]),t._v(" 运行中状态： 当组件的props 或者state 更新之后")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("componentWillReceiveProps(nextProps)")]),t._v(":  会在已挂载的组件接收新的 props 之前被调用,如果你需要更新状态以响应 prop 更改（例如，重置它），你可以比较 "),e("code",[t._v("this.props")]),t._v(" 和 "),e("code",[t._v("nextProps")]),t._v(" 并在此方法中使用 "),e("code",[t._v("this.setState()")]),t._v(" 执行 state 转换")])]),t._v(" "),e("li",[e("p",[e("strong",[e("code",[t._v("shouldComponentUpdate")])]),t._v(": "),e("strong",[t._v("组件接受到新属性或者新状态的时候（可以返回 false，接收数据后不更新，阻止 render 调用，后面的函数不会被继续执行了此方法仅作为性能优化的方式而存在。不要企图依靠此方法来“阻止”渲染，因为这可能会产生 bug")]),t._v(" "),e("strong",[e("code",[t._v("PureComponent")])]),t._v(" 会对 props 和 state 进行浅层比较，并减少了跳过必要更新的可能性。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("componentWillUpdate(nextProps, nextState)")]),t._v(": **当组件收到新的 props 或 state 时会在渲染之前调用此方法，使用此作为在更新发生之前执行准备更新的机会。初始渲染不会调用此方法。不能此方法中调用 "),e("code",[t._v("this.setState()")]),t._v("；在 "),e("code",[t._v("UNSAFE_componentWillUpdate()")]),t._v(" 返回之前，也不应该执行任何其他操作（例如，dispatch Redux 的 action）触发对 React 组件的更新")])]),t._v(" "),e("li",[e("p",[e("strong",[e("code",[t._v("render")])]),t._v(":"),e("strong",[t._v("组件渲染组件")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("getSnapshotBeforeUpdate(prevProps, prevState)")]),t._v(", getSnapshotBeforeUpdate() 在最近一次渲染输出（提交到 DOM 节点）之前调用。它使得组件能在发生更改之前从 DOM 中捕获一些信息（例如，滚动位置）。此生命周期的任何返回值将作为参数传递给 componentDidUpdate()。")])]),t._v(" "),e("li",[e("p",[e("strong",[e("code",[t._v("componentDidUpdate(prevProps, prevState, snapshot)")])]),t._v(": "),e("strong",[t._v("组件已经更新")]),t._v(" "),e("strong",[t._v("会在更新后会被立即调用。首次渲染不会执行此方法。")])])])]),t._v(" "),e("p",[e("a",{attrs:{name:"zCWjW"}})]),t._v(" "),e("h3",{attrs:{id:"销毁阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#销毁阶段"}},[t._v("#")]),t._v(" 销毁阶段：")]),t._v(" "),e("ul",[e("li",[e("strong",[e("code",[t._v("componentWillUnmount")])]),t._v(":"),e("strong",[t._v("组件即将销毁")]),t._v(" "),e("strong",[t._v("会在组件卸载及销毁之前直接调用。在此方法中执行必要的清理操作，例如，清除 timer，取消网络请求或清除在 componentDidMount() 中创建的订阅等。")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);