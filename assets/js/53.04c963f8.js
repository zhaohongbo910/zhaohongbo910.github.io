(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{556:function(t,e,n){"use strict";n.r(e);var o=n(4),v=Object(o.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[n("strong",[t._v("setState是同步还是异步")])]),t._v(" "),n("p",[n("code",[t._v("setState")]),t._v(" 只在合成事件和钩子函数中是“异步”的，在原生事件和 "),n("code",[t._v("setTimeout")]),t._v(" 中都是同步的")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("合成事件")]),t._v("：就是react 在组件中的onClick等都是属于它自定义的合成事件")]),t._v(" "),n("li",[n("strong",[t._v("原生事件")]),t._v("：比如通过addeventListener添加的，dom中的原生事件")])]),t._v(" "),n("p",[t._v("异步的更新机制")]),t._v(" "),n("p",[n("code",[t._v("setState")]),t._v(" 函数内部调用的 "),n("code",[t._v("Component")]),t._v(" 的 "),n("code",[t._v("updater")]),t._v("(更新器)的 "),n("code",[t._v("enqueueSetState")]),t._v(" 在操作一个 state 队列\n简而言之 就是 setState调用updater.enqueueSetState 方法")])])}),[],!1,null,null,null);e.default=v.exports}}]);