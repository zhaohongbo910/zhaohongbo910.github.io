(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{685:function(s,t,a){"use strict";a.r(t);var e=a(2),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"docker-诞生的背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-诞生的背景"}},[s._v("#")]),s._v(" Docker 诞生的背景")]),s._v(" "),a("p",[s._v("主机时代比拼的是单个服务器物理性能（如CPU主频和内存）的强弱，那么在云时代，最为看重的则是凭借虚拟化技术所构建的集群处理能力。\n虚拟化的概念早已经广泛应用到各种关键场景中。从20世纪60年代IBM推出的大型主机虚拟化，到后来以Xen、KVM为代表的虚拟机虚拟化，再到现在以Docker为代表的容器技术，虚拟化技术自身也在不断进行创新和突破。\n虚拟化既可以通过硬件模拟来实现，也可以通过操作系统软件来实现。而容器技术则更为优雅，它充分利用了操作系统本身已有的机制和特性，可以实现远超传统虚拟机的轻量级虚拟化。因此，有人甚至把它称为“新一代的虚拟化”技术，并将基于容器打造的云平台亲切地称为“容器云”,"),a("strong",[s._v("Docker正是众多容器技术中的佼佼者")])]),s._v(" "),a("h2",{attrs:{id:"初始docker容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始docker容器"}},[s._v("#")]),s._v(" 初始"),a("a",{attrs:{href:"http://docker.com",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker"),a("OutboundLink")],1),s._v("容器")]),s._v(" "),a("p",[a("strong",[s._v("Docker是基于Go语言实现的开源容器项目")]),s._v("。它诞生于2013年年初，最初发起者是dotCloud公司(现在已经改为Docker )。Docker项目已加入Linux基金会，并遵循Apache 2.0协议。")]),s._v(" "),a("h3",{attrs:{id:"linux容器技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux容器技术"}},[s._v("#")]),s._v(" Linux容器技术")]),s._v(" "),a("p",[s._v("与大部分新兴技术的诞生一样，Docker也并非“从石头缝里蹦出来的”，而是站在前人的肩膀上，就是Linux容器（Linux Containers, LXC）技术。IBM 开发者网站关于容器技术的描述十分准确：“"),a("strong",[s._v("容器有效地将由单个操作系统管理的资源划分到孤立的组中，以更好地在孤立的组之间平衡有冲突的资源使用需求。与虚拟化相比，这样既不需要指令级模拟，也不需要即时编译。容器可以在核心CPU本地运行指令，而不需要任何专门的解释机制。此外，也避免了准虚拟化（para-virtualization）和系统调用替换中的复杂性")]),s._v("。LXC也经历了长期的演化，最早可以追溯到1982年Unix系列操作系统上的chroot工具。")]),s._v(" "),a("h3",{attrs:{id:"从linux容器到docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从linux容器到docker"}},[s._v("#")]),s._v(" 从Linux容器到Docker")]),s._v(" "),a("p",[s._v("在LXC的基础上，Docker进一步优化了容器的使用体验，"),a("strong",[s._v("首先，Docker提供了各种容器管理工具（如分发、版本、移植等），让用户无须关注底层的操作，更加简单明了地管理和使用容器；其次，Docker通过引入分层文件系统构建和高效的镜像机制，降低了迁移难度，极大地改善了用户体验。用户操作Docker容器就像操作应用自身一样简单。")]),s._v("\n早期的Docker代码实现是直接基于LXC的。自0.9版本开始，Docker开发了libcon-tainer项目作为更广泛的容器驱动实现，从而替换掉了LXC的实现。目前，Docker还积极推动成立了runC标准项目，并贡献给开放容器联盟，试图让容器的支持不再局限于Linux操作系统，而是更安全、更开放、更具扩展性。简单地讲。\nDocker容器理解为一种轻量级的沙盒（sandbox）。每个容器内运行着一个或多个应用，不同的容器相互隔离，容器之间也可以通过网络互相通信。"),a("strong",[s._v("容器的创建和停止十分快速，几乎跟创建和终止原生应用一致；另外，容器自身对系统资源的额外需求也十分有限，远远低于传统虚拟机。很多时候，甚至直接把容器当作应用本身也没有任何问题。")])]),s._v(" "),a("h3",{attrs:{id:"docker的目标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker的目标"}},[s._v("#")]),s._v(" Docker的目标")]),s._v(" "),a("p",[s._v("Docker的构想是要实现“Build, Ship and Run Any App, Anywhere”，即通过对应用的封装（Packaging）、分发（Distribution）、部署（Deployment）、运行（Runtime）全生命周期进行管理，达到应用组件级别的“一次封装，到处运行”。这里的应用组件，既可以是一个Web应用、一个编译环境，也可以是一套数据库平台服务，甚至是一个操作系统或集群。")]),s._v(" "),a("h2",{attrs:{id:"docker引擎的认识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker引擎的认识"}},[s._v("#")]),s._v(" Docker引擎的认识")]),s._v(" "),a("p",[s._v("Docker 引擎由如下主要的组件构成：\nDocker 客户端（Docker Client）\nDocker 守护进程（Docker daemon）\ncontainerd 以及 runc。它们共同负责容器的创建和运行\n最新的架构示意图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/1024167/1610590030318-7cfc76cf-4e83-4ba8-89ab-1cc9c8e9fd09.png#align=left&display=inline&height=708&margin=%5Bobject%20Object%5D&name=image.png&originHeight=944&originWidth=1419&size=541017&status=done&style=stroke&width=1064",alt:"image.png"}})]),s._v(" "),a("h2",{attrs:{id:"核心概念与安装配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心概念与安装配置"}},[s._v("#")]),s._v(" 核心概念与安装配置")]),s._v(" "),a("p",[s._v("介绍Docker的三大核心概念：❑ 镜像（Image）❑ 容器（Container）❑ 仓库（Repository）只有理解了这三个核心概念，才能顺利地理解Docker容器的整个生命周期。")]),s._v(" "),a("h3",{attrs:{id:"镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像"}},[s._v("#")]),s._v(" 镜像")]),s._v(" "),a("p",[s._v("Docker镜像类似于虚拟机镜像，可以将它理解为一个只读的模板。例如，一个镜像可以包含一个基本的操作系统环境，里面仅安装了Apache应用程序（或用户需要的其他软件）。可以把它称为一个Apache镜像。镜像是创建Docker容器的基础。通过版本管理和增量的文件系统，Docker提供了一套十分简单的机制来创建和更新现有的镜像，用户甚至可以从网上下载一个已经做好的应用镜像，并直接使用。镜像可以理解成源代码。")]),s._v(" "),a("h3",{attrs:{id:"容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器"}},[s._v("#")]),s._v(" 容器")]),s._v(" "),a("p",[a("strong",[s._v("Docker容器类似于一个轻量级的沙箱")]),s._v("，Docker利用容器来运行和隔离应用。容器是从镜像创建的应用运行实例。它可以启动、开始、停止、删除，而这些容器都是彼此相互隔离、互不可见的。可以把容器看作一个简易版的Linux系统环境（包括root用户权限、进程空间、用户空间和网络空间等）以及运行在其中的应用程序打包而成的盒子。容器可以理解成从镜像编译运行的应用程序。")]),s._v(" "),a("h3",{attrs:{id:"仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#仓库"}},[s._v("#")]),s._v(" 仓库")]),s._v(" "),a("p",[s._v("镜像仓库，则是指存放镜像文件的地方，可以理解成源代码仓库，列如GitHub，或者GitLab。\n每个仓库集中存放某一类镜像，往往包括多个镜像文件，通过不同的标签（tag）来进行区分。例如存放Ubuntu操作系统镜像的仓库，被称为Ubuntu仓库，其中可能包括16.04、18.04等不同版本的镜像。\n目前，最大的公开仓库是官方提供的"),a("a",{attrs:{href:"https://registry.hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker Hub"),a("OutboundLink")],1),s._v("，其中存放着数量庞大的镜像供用户下载。国内不少云服务提供商"),a("a",{attrs:{href:"https://developer.aliyun.com/mirror/docker-ce?spm=a2c6h.13651102.0.0.3e221b118dxyXs",target:"_blank",rel:"noopener noreferrer"}},[s._v("阿里云仓库"),a("OutboundLink")],1),s._v("也提供了仓库的本地源，可以提供稳定的国内访问。")]),s._v(" "),a("h3",{attrs:{id:"docker的安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker的安装"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://docs.docker.com/engine/install/centos/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker的安装 "),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("Docker引擎目前分为两个版本：**社区版本（Community Edition, CE）和企业版本（Enterprise Edition, EE）。**对于windows和 Mac 版本的Docker 都是社区提供的，在生产环境中不建议使用。所以重点学习在其Linux系统的上面的使用，以centos8为例安装学习：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'卸载旧版本的docker'")]),s._v("\nyum remove docker "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-client "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-client-latest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-latest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-latest-logrotate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-logrotate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-engine\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'安装常用软件包'")]),s._v("\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" yum-utils device-mapper-persistent-data lvm2 -y\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'添加 阿里Docker源'")]),s._v("\nyum-config-manager  --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'更新并安装Docker-CE'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum makecache fast\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'安装docker-ce'")]),s._v("\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y docker-ce docker-ce-cli containerd.io\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'设置Docker开机自启动'")]),s._v("\nsystemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" docker\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'启动docker'")]),s._v("\nsystemctl start docker\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'查看docker版本'")]),s._v("\ndocker --version\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'给docker换阿里源'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF"),a("span",{pre:!0,attrs:{class:"token bash punctuation"}},[s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/docker/daemon.json")]),s._v('\n{\n"registry-mirrors": ["https://fl791z1h.mirror.aliyuncs.com"]\n}\nEOF')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'重启docker服务'")]),s._v("\nsystemctl restart docker\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'查看docker信息'")]),s._v("\ndocker info\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br")])]),a("p",[s._v("安装过程出现的可能出现的问题排查： 由于最新的docker 依赖的container 的版本变化引起的安装问题")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# yum -y install docker-ce")]),s._v("\n上次元数据过期检查：0:00:32 前，执行于 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2021")]),s._v("年01月07日 星期四 08时07分56秒。\n错误：\n 问题: package docker-ce-3:20.10.2-3.el7.x86_64 requires containerd.io "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.4")]),s._v(".1, but none of the providers can be installed\n  - cannot "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" the best candidate "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the job\n  - package containerd.io-1.4.3-3.1.el7.x86_64 is filtered out by modular filtering\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 出现上面的错误信息的时候 ，打开下面的链接 找到对应的 centos 版本，然后点进去找到继续找 下图所")]),s._v("\nhttps://mirrors.aliyun.com/docker-ce/linux/centos/\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirrors.aliyun.com/docker-ce/linux/centos/8/x86_64/stable/Packages/containerd.io-1.4.3-3.1.el8.x86_64.rpm\n\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" containerd.io-1.4.3-3.1.el8.x86_64.rpm\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在继续")]),s._v("\nyum -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/1024167/1610590030441-75cc67e4-5624-4e47-945c-ee21c57a65f3.png#align=left&display=inline&height=432&margin=%5Bobject%20Object%5D&name=image.png&originHeight=864&originWidth=1962&size=977051&status=done&style=none&width=981",alt:"image.png"}})]),s._v(" "),a("h2",{attrs:{id:"镜像-image"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像-image"}},[s._v("#")]),s._v(" 镜像 image")]),s._v(" "),a("h4",{attrs:{id:"docker-image-pull-或者-docker-pull"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-image-pull-或者-docker-pull"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker image pull")]),s._v(" 或者 "),a("code",[s._v("docker pull")])]),s._v(" "),a("p",[s._v("镜像是运行容器的前提,可以使用"),a("code",[s._v("docker [image] pull")]),s._v("命令直接从Docker Hub镜像源来下载镜像。该命令的格式为 "),a("code",[s._v("docker [image] pull NAME[:TAG]")]),s._v(" NAME是镜像仓库名称（用来区分镜像）, TAG是镜像的标签（往往用来表示版本信息）。通常情况下，描述一个镜像需要包括“名称+标签”信息")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker pull centos   获取一个镜像，不加 tag 标签的时候 默认拉去的 tag是latest")]),s._v("\nUsing default tag: latest\nlatest: Pulling from library/centos\n7a0437f04f83: Pull complete\nDigest: sha256:5528e8b1b1719d34604c87e11dcd1c0a20bedf46e83b5632cdeac91b8c04efc1\nStatus: Downloaded newer image "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" centos:latest\ndocker.io/library/centos:latest\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("下载过程中可以看出，镜像文件一般由若干层（layer）组成，7a0437f04f83这样的串是层的唯一id（实际上完整的id包括256比特，64个十六进制字符组成）。使用docker pull命令下载中会获取并输出镜像的各层信息。当不同的镜像包括相同的层时，本地仅存储了层的一份内容，减小了存储空间")]),s._v(" "),a("h4",{attrs:{id:"docker-images命令可以列出本地主机上已有镜像的基本信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-images命令可以列出本地主机上已有镜像的基本信息"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker images")]),a("strong",[s._v("命令可以列出本地主机上已有镜像的基本信息")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker images")]),s._v("\nREPOSITORY            TAG       IMAGE ID       CREATED         SIZE\nnginx                 latest    ae2feff98a0c   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" weeks ago     133MB\ncentos                latest    300e315adb2f   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" weeks ago     209MB\nportainer/portainer   latest    62771b0b9b09   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" months ago    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("79")]),s._v(".1MB\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("可以看到几个字段信息：\n❑ 来自于哪个仓库，比如centos表示centos系列的基础镜像；\n❑ 镜像的标签信息，比如latest表示不同的版本信息。标签只是标记，并不能标识镜像内容；\n❑ 镜像的ID（唯一标识镜像），如果两个镜像的ID相同，说明它们实际上指向了同一个镜像，只是具有不同标签名称而已；\n❑ 创建时间，说明镜像最后的更新时间；\n❑ 镜像大小，优秀的镜像往往体积都较小")]),s._v(" "),a("h4",{attrs:{id:"docker-image-inspect-镜像名称-镜像id-命令可以获取该镜像的详细信息-包括制作者、适应架构、各层的数字摘要等"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-image-inspect-镜像名称-镜像id-命令可以获取该镜像的详细信息-包括制作者、适应架构、各层的数字摘要等"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker[image]inspect 镜像名称/镜像ID")]),s._v("  命令可以获取该镜像的详细信息，包括制作者、适应架构、各层的数字摘要等")]),s._v(" "),a("h4",{attrs:{id:"docker-history-镜像名称-镜像id命令查看镜像历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-history-镜像名称-镜像id命令查看镜像历史"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker history 镜像名称/镜像ID")]),s._v("命令查看镜像历史")]),s._v(" "),a("h4",{attrs:{id:"docker-search-镜像名称-命令可以搜索docker-hub官方仓库中的镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-search-镜像名称-命令可以搜索docker-hub官方仓库中的镜像"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker search 镜像名称")]),s._v(" 命令可以搜索Docker Hub官方仓库中的镜像")]),s._v(" "),a("h4",{attrs:{id:"docker-rmi-镜像名称-镜像id或docker-image-rm-镜像名称-镜像id命令删除镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-rmi-镜像名称-镜像id或docker-image-rm-镜像名称-镜像id命令删除镜像"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker rmi 镜像名称/镜像ID")]),s._v("或"),a("code",[s._v("docker image rm 镜像名称/镜像ID")]),s._v("命令删除镜像")]),s._v(" "),a("h4",{attrs:{id:"docker-image-prune命令来进行清理镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-image-prune命令来进行清理镜像"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker image prune")]),s._v("命令来进行清理镜像")]),s._v(" "),a("p",[s._v("使用Docker一段时间后，系统中可能会遗留一些临时的镜像文件，以及一些没有被使用的镜像可以使用上述的命令清理掉\n支持选项包括：\n❑ -a, -all：删除所有无用镜像，不光是临时镜像\n❑ -filter filter：只清理符合给定过滤器的镜像\n❑ -f, -force：强制删除镜像，而不进行提示确认")]),s._v(" "),a("h4",{attrs:{id:"docker-container-commit命令基于已有容器创建镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-commit命令基于已有容器创建镜像"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] commit")]),s._v("命令基于已有容器创建镜像")]),s._v(" "),a("p",[s._v("命令格式为 docker [container] commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]\n主要选项包括：OPTIONS\n"),a("strong",[s._v('❑ -a, --author=""：作者信息')]),s._v(" "),a("strong",[s._v("❑ -c, --change=[]：提交的时候执行Dockerfile指令，包括CMD|ENTRYPOINT|ENV|EXPOSE|LABEL|ONBUILD|USER|VOLUME|WORKDIR等")]),s._v(" "),a("strong",[s._v('❑ -m, --message=""：提交消息')]),s._v(" "),a("strong",[s._v("❑ -p, --pause=true：提交时暂停容器运行")])]),s._v(" "),a("h4",{attrs:{id:"docker-container-import-从模板文件导入一个镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-import-从模板文件导入一个镜像"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] import")]),s._v(" 从模板文件导入一个镜像")]),s._v(" "),a("p",[s._v("命令格式为 docker [image] import [OPTIONS]file|URL|-[REPOSITORY [:TAG]]")]),s._v(" "),a("h4",{attrs:{id:"基于dockerfile创建镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于dockerfile创建镜像"}},[s._v("#")]),s._v(" 基于Dockerfile创建镜像")]),s._v(" "),a("h4",{attrs:{id:"docker-image-save-导出镜像到本地文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-image-save-导出镜像到本地文件"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [image] save")]),s._v(" 导出镜像到本地文件")]),s._v(" "),a("p",[s._v("该命令支持-o、-output string参数，导出镜像到指定的文件中，就可以通过复制到处的文件给别人使用")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("// 保存当前的centos 镜像为centos_letest.tar 文件\ndocker save -o centon_letest.tar centos:latest  \n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h4",{attrs:{id:"docker-image-load将导出的tar文件再导入到本地镜像库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-image-load将导出的tar文件再导入到本地镜像库"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [image] load")]),s._v("将导出的tar文件再导入到本地镜像库")]),s._v(" "),a("p",[s._v("支持-i、-input string选项，从指定文件中读入镜像内容")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v(" docker load -i centon_letest.tar\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"docker-image-push-命令上传镜像到仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-image-push-命令上传镜像到仓库"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [image] push")]),s._v(" 命令上传镜像到仓库")]),s._v(" "),a("p",[s._v("默认上传到Docker Hub官方仓库,类似 "),a("code",[s._v("git push")])]),s._v(" "),a("h2",{attrs:{id:"容器-container"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器-container"}},[s._v("#")]),s._v(" 容器 container")]),s._v(" "),a("p",[s._v("容器是Docker的另一个核心概念。简单来说，容器是镜像的一个运行实例。所不同的是，镜像是静态的只读文件，而容器带有运行时需要的可写文件层，同时，容器中的应用进程处于运行状态。")]),s._v(" "),a("h3",{attrs:{id:"创建容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建容器"}},[s._v("#")]),s._v(" 创建容器")]),s._v(" "),a("h4",{attrs:{id:"docker-container-create命令新建一个容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-create命令新建一个容器"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] create")]),s._v("命令新建一个容器")]),s._v(" "),a("p",[s._v("使用docker [container] create命令新建的容器处于停止状态，可以使用 "),a("code",[s._v("docker[container] start")]),s._v("命令来启动它。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker create -it centos:latest")]),s._v("\n27a89a80a2cb4e5c5fe0e24ef86cb2dac451219beeee3f11ac916fe2143f369a\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h4",{attrs:{id:"docker-container-start启动容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-start启动容器"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] start")]),s._v("启动容器")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker start 27a89a80a2c")]),s._v("\n27a89a80a2c\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker ps")]),s._v("\nCONTAINER ID   IMAGE                 COMMAND                  CREATED         STATUS         PORTS      NAMES\n27a89a80a2cb   centos:latest         "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" minutes ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" seconds              objective_lederberg\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h4",{attrs:{id:"docker-container-run新建并启动容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-run新建并启动容器"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] run")]),s._v("新建并启动容器")]),s._v(" "),a("p",[s._v("等价于先执行"),a("code",[s._v("docker [container]create")]),s._v("命令，再执行"),a("code",[s._v("docker [container] start")]),s._v("命令\n当利用docker [container] run来创建并启动容器时，Docker在后台运行的标准操作包括：\n❑ 检查本地是否存在指定的镜像，不存在就从公有仓库下载\n❑ 利用镜像创建一个容器，并启动该容器\n❑ 分配一个文件系统给容器，并在只读的镜像层外面挂载一层可读写层\n❑ 从宿主主机配置的网桥接口中桥接一个虚拟接口到容器中去\n❑ 从网桥的地址池配置一个IP地址给容器\n❑ 执行用户指定的应用程序\n❑ 执行完毕后容器被自动终止")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run -it --name centos-test  centos:latest /bin/bash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@d078291e042a /"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("常用选项")]),s._v(" "),a("ul",[a("li",[s._v("**-t **选项让Docker分配一个伪终端（pseudo-tty）并绑定到容器的标准输入上，")]),s._v(" "),a("li",[s._v("**-i **则让容器的标准输入保持打开")]),s._v(" "),a("li",[a("strong",[s._v("--name")]),s._v(" 给这个启动的容器起一个名称")]),s._v(" "),a("li",[a("strong",[s._v("-d")]),s._v(" 需要让Docker容器在后台以守护态（Daemonized）形式运行")]),s._v(" "),a("li",[s._v("更多的命令选项可以通过 docker run --help命令来查看")])]),s._v(" "),a("h4",{attrs:{id:"docker-container-logs-查看容器输出日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-logs-查看容器输出日志"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] logs")]),s._v(" 查看容器输出日志")]),s._v(" "),a("h3",{attrs:{id:"停止容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#停止容器"}},[s._v("#")]),s._v(" 停止容器")]),s._v(" "),a("h4",{attrs:{id:"docker-container-pause-命令来暂停一个运行中的容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-pause-命令来暂停一个运行中的容器"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] pause")]),s._v(" 命令来暂停一个运行中的容器")]),s._v(" "),a("p",[s._v("处于paused状态的容器，可以使用"),a("code",[s._v("docker [container] unpause")]),s._v(" CONTAINER[CONTAINER...]命令来恢复到运行状态")]),s._v(" "),a("h4",{attrs:{id:"docker-container-unpause命令来恢复到运行状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-unpause命令来恢复到运行状态"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] unpause命令来恢复到运行状态")])]),s._v(" "),a("h4",{attrs:{id:"docker-container-stop来终止一个运行中的容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-stop来终止一个运行中的容器"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] stop")]),s._v("来终止一个运行中的容器")]),s._v(" "),a("p",[s._v("该命令会首先向容器发送SIGTERM信号，等待一段超时时间后（默认为10秒），再发送SIGKILL信号来终止容器，处于终止状态的容器，可以通过"),a("code",[s._v("docker [container] start")]),s._v("命令来重新启动")]),s._v(" "),a("h4",{attrs:{id:"docker-container-kill直接发送sigkill信号来强行终止容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-kill直接发送sigkill信号来强行终止容器"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] kill")]),s._v("直接发送SIGKILL信号来强行终止容器")]),s._v(" "),a("h4",{attrs:{id:"docker-container-restart命令会将一个运行态的容器先终止-然后再重新启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-restart命令会将一个运行态的容器先终止-然后再重新启动"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] restart")]),s._v("命令会将一个运行态的容器先终止，然后再重新启动")]),s._v(" "),a("h3",{attrs:{id:"进入容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进入容器"}},[s._v("#")]),s._v(" 进入容器")]),s._v(" "),a("h4",{attrs:{id:"docker-container-attach-连接到正在运行中的容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-attach-连接到正在运行中的容器"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] attach")]),s._v(" 连接到正在运行中的容器")]),s._v(" "),a("h4",{attrs:{id:"docker-container-exec-更加方便的工具exec命令-可以在运行中容器内直接执行任意命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-exec-更加方便的工具exec命令-可以在运行中容器内直接执行任意命令"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] exec")]),s._v(" 更加方便的工具exec命令，可以在运行中容器内直接执行任意命令")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it 容器名称/容器ID /bin/bash\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"删除容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除容器"}},[s._v("#")]),s._v(" 删除容器")]),s._v(" "),a("h4",{attrs:{id:"docker-container-rm命令来删除处于终止或退出状态的容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-rm命令来删除处于终止或退出状态的容器"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] rm")]),s._v("命令来删除处于终止或退出状态的容器")]),s._v(" "),a("p",[s._v("主要支持的选项包括：\n❑ -f, --force=false：是否强行终止并删除一个运行中的容器\n❑ -l, --link=false：删除容器的连接，但保留容器\n❑ -v, --volumes=false：删除容器挂载的数据卷")]),s._v(" "),a("h3",{attrs:{id:"导入和导出容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导入和导出容器"}},[s._v("#")]),s._v(" 导入和导出容器")]),s._v(" "),a("h4",{attrs:{id:"docker-container-export"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-export"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] export")])]),s._v(" "),a("p",[s._v("导出容器是指，导出一个已经创建的容器到一个文件，不管此时这个容器是否处于运行状态")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" -o export_centos.tar 容器ID/容器名称\n// -o 导出的文件名\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h4",{attrs:{id:"docker-container-import命令导入变成镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-import命令导入变成镜像"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] import")]),s._v("命令导入变成镜像")]),s._v(" "),a("h4",{attrs:{id:"docker-container-inspect-查看容器详情"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-inspect-查看容器详情"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker container inspect")]),s._v(" 查看容器详情")]),s._v(" "),a("h4",{attrs:{id:"docker-container-top查看容器内进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-top查看容器内进程"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] top")]),s._v("查看容器内进程")]),s._v(" "),a("h4",{attrs:{id:"docker-container-stats-查看统计信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-stats-查看统计信息"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] stats")]),s._v(" 查看统计信息")]),s._v(" "),a("h4",{attrs:{id:"docker-container-cp-命令支持在容器和主机之间复制文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-cp-命令支持在容器和主机之间复制文件"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] cp")]),s._v(" 命令支持在容器和主机之间复制文件")]),s._v(" "),a("p",[s._v("本地的路径data复制到test容器的/tmp路径下 "),a("code",[s._v("docker cp data test:/tmp")])]),s._v(" "),a("h4",{attrs:{id:"docker-container-diff-查看容器内文件系统的变更"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-diff-查看容器内文件系统的变更"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] diff")]),s._v(" 查看容器内文件系统的变更")]),s._v(" "),a("h4",{attrs:{id:"docker-container-port命令可以查看容器的端口映射情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-port命令可以查看容器的端口映射情况"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] port")]),s._v("命令可以查看容器的端口映射情况")]),s._v(" "),a("h4",{attrs:{id:"docker-container-update-命令可以更新容器的一些运行时配置-主要是一些资源限制份额"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-update-命令可以更新容器的一些运行时配置-主要是一些资源限制份额"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker [container] update")]),s._v(" 命令可以更新容器的一些运行时配置，主要是一些资源限制份额")]),s._v(" "),a("p",[s._v("支持的选项包括：\n❑ -blkio-weight uint16：更新块IO限制，10～1000，默认值为0，代表着无限制\n❑ -cpu-period int：限制CPU调度器CFS（Completely Fair Scheduler）使用时间，单位为微秒，最小1000\n❑ -cpu-quota int：限制CPU调度器CFS配额，单位为微秒，最小1000\n❑ -cpu-rt-period int：限制CPU调度器的实时周期，单位为微秒\n❑ -cpu-rt-runtime int：限制CPU调度器的实时运行时，单位为微秒\n❑ -c, -cpu-shares int：限制CPU使用份额；\n❑ -cpus decimal：限制CPU个数；\n❑ -cpuset-cpus string：允许使用的CPU核，如0-3,0,1\n❑ -cpuset-mems string：允许使用的内存块，如0-3,0,1\n❑ -kernel-memory bytes：限制使用的内核内存；\n❑ -m, -memory bytes：限制使用的内存\n❑ -memory-reservation bytes：内存软限制\n❑ -memory-swap bytes：内存加上缓存区的限制，-1表示为对缓冲区无限制\n❑ -restart string：容器退出后的重启策略")]),s._v(" "),a("h2",{attrs:{id:"docker数据管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker数据管理"}},[s._v("#")]),s._v(" Docker数据管理")]),s._v(" "),a("p",[s._v("在生产环境中使用Docker，往往需要对数据进行持久化，或者需要在多个容器之间进行数据共享，这必然涉及容器的数据管理操作。\n容器中的管理数据主要有两种方式：\n"),a("strong",[s._v("❑ 数据卷（Data Volumes）：容器内数据直接映射到本地主机环境；")]),s._v(" "),a("strong",[s._v("❑ 数据卷容器（Data Volume Containers）：使用特定容器维护数据卷。")]),s._v("\n首先介绍如何在容器内创建数据卷，并且把本地的目录或文件挂载到容器内的数据卷中。其次介绍如何使用数据卷容器在容器和主机、容器和容器之间共享数据，并实现数据的备份和恢复。")]),s._v(" "),a("h3",{attrs:{id:"数据卷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据卷"}},[s._v("#")]),s._v(" 数据卷")]),s._v(" "),a("p",[a("strong",[s._v("数据卷（Data Volumes）是一个可供容器使用的特殊目录，它将主机操作系统目录直接映射进容器，类似于Linux中的mount行为")]),s._v("\n数据卷可以提供很多有用的特性：\n❑ 数据卷可以在容器之间共享和重用，容器间传递数据将变得高效与方便\n❑ 对数据卷内数据的修改会立马生效，无论是容器内操作还是本地操作\n❑ 对数据卷的更新不会影响镜像，解耦开应用和数据\n❑ 卷会一直存在，直到没有容器使用，可以安全地卸载它")]),s._v(" "),a("h3",{attrs:{id:"创建数据卷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建数据卷"}},[s._v("#")]),s._v(" 创建数据卷")]),s._v(" "),a("h4",{attrs:{id:"docker-volume-create-创建数据卷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-volume-create-创建数据卷"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker volume create")]),s._v(" 创建数据卷")]),s._v(" "),a("p",[s._v("Docker提供了volume子命令来管理数据卷，如下命令可以快速在本地创建一个数据卷：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker volume create -d "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" test-vol 创建一个本地的数据卷\n// \n/var/lib/docker/volumes路径下，会发现所创建的数据卷 test-vol\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h4",{attrs:{id:"docker-volume-inspect-查看详细信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-volume-inspect-查看详细信息"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker volume inspect")]),s._v("（查看详细信息）")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost volumes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker volume inspect test-vol")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CreatedAt"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2021-01-07T16:36:32-05:00"')]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Driver"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"local"')]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Labels"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Mountpoint"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/var/lib/docker/volumes/test-vol/_data"')]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test-vol"')]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Options"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Scope"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"local"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h4",{attrs:{id:"docker-volume-ls-列出已有数据卷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-volume-ls-列出已有数据卷"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker volume ``ls")]),s._v(" 列出已有数据卷")]),s._v(" "),a("h4",{attrs:{id:"docker-volume-prune-清理无用数据卷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-volume-prune-清理无用数据卷"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker volume prune")]),s._v(" 清理无用数据卷")]),s._v(" "),a("h4",{attrs:{id:"docker-volume-rm-删除数据卷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-volume-rm-删除数据卷"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker volume rm")]),s._v(" 删除数据卷")]),s._v(" "),a("h3",{attrs:{id:"绑定数据卷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绑定数据卷"}},[s._v("#")]),s._v(" 绑定数据卷")]),s._v(" "),a("p",[a("strong",[s._v("除了使用volume子命令来管理数据卷外，还可以在创建容器时将主机本地的任意路径挂载到容器内作为数据卷，这种形式创建的数据卷称为绑定数据卷")]),s._v(" "),a("code",[s._v("docker [container] run")]),s._v("命令的时候，可以使用**-mount**选项来使用数据卷。\n-mount type选项支持三种类型的数据卷，包括：\n❑ volume：普通数据卷，映射到主机/var/lib/docker/volumes路径下；\n❑ bind：绑定数据卷，映射到主机指定路径下；\n❑ tmpfs：临时数据卷，只存在于内存中")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("source：主机目录路径\ndestination:容器目录路径\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bind,source"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/path/on/host,destination"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/path/in/container\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("volume,source"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("my-volume,destination"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/path/in/container,volume-label"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"color=red"')]),s._v(",volume-label"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shape=round"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("tmpfs,tmpfs-size"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("512M,destination"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/path/in/container\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker run -itd --name centos-test --mount "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bind,source"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/www,destination"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/cen_www centos:latest\n// 上面的命令相当下面\ndocker run -itd --name centos-test  -v /www:/cen_www centos:latest\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("Docker挂载数据卷的默认权限是读写（rw），用户也可以通过ro指定为只读：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker run -itd --name centos-test  -v /www:/cen_www:ro centos:latest\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"数据卷容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据卷容器"}},[s._v("#")]),s._v(" 数据卷容器")]),s._v(" "),a("p",[s._v("如果需要在多个容器之间共享一些持续更新的数据，最简单的方式是使用数据卷容器。"),a("strong",[s._v("数据卷容器也是一个容器，但是它的目的是专门提供数据卷给其他容器挂载")]),s._v("\n首先，创建一个数据卷容器dbcontainer，并在其中创建一个数据卷挂载到/dbcontainer,\n然后，可以在其他容器中使用 **--volumes-from **来挂载dbcontainer容器中的数据卷，例如创建db1和db2两个容器，并从dbcontainer容器挂载数据卷：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker run -itd --name dbcontainer -v /db_host:/dbdata centos:latest\ndocker run -itd --name db1  --volumes-from   dbcontainer centos:latest\ndocker run -itd --name  db2  --volumes-from  dbcontainer centos:latest\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("此时，容器db1和db2都挂载同一个数据卷到相同的/dbdata目录，三个容器任何一方在该目录下的写入，其他容器都可以看到\n可以多次使用 --volumes-from 参数来从多个容器挂载多个数据卷，还可以从其他已经挂载了容器卷的容器来挂载数据卷")]),s._v(" "),a("h2",{attrs:{id:"端口映射与容器互联"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#端口映射与容器互联"}},[s._v("#")]),s._v(" 端口映射与容器互联")]),s._v(" "),a("p",[s._v("Docker除了通过网络访问外，还提供了两个很方便的功能来满足服务访问的基本需求：一个是允许映射容器内应用的服务端口到本地宿主主机；另一个是互联机制实现多个容器间通过容器名来快速访问")]),s._v(" "),a("h3",{attrs:{id:"从外部访问容器应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从外部访问容器应用"}},[s._v("#")]),s._v(" 从外部访问容器应用")]),s._v(" "),a("p",[s._v("当容器中运行一些网络应用，要让外部访问这些应用时，可以通过-P或-p参数来指定端口映射。\n当使用-P（大写的）标记时，Docker会随机映射一个49000～49900的端口到内部容器开放的网络端口\n-p（小写的）则可以指定要映射的端口，并且，在一个指定端口上只可以绑定一个容器。\n支持的格式有")]),s._v(" "),a("ul",[a("li",[s._v("**映射所有接口地址 **")])]),s._v(" "),a("p",[a("code",[s._v("HostPort:ContainerPort")]),s._v("       ** eg:80   8080:8080**")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("映射到指定地址的指定端口")])])]),s._v(" "),a("p",[a("code",[s._v("IP:HostPort:ContainerPort")]),s._v(" ** eg:127.0.0.1:5000:5000**")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("映射到指定地址的任意端口")])])]),s._v(" "),a("p",[a("code",[s._v("IP::ContainerPort")]),s._v(" "),a("strong",[s._v("eg:127.0.0.1::5000")]),s._v("\n使用"),a("code",[s._v("IP::ContainerPort")]),s._v("绑定localhost的任意端口到容器的5000端口，本地主机会自动分配一个端口")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("指定udp端口")])])]),s._v(" "),a("p",[a("code",[s._v("IP:ContainerPort/udp")]),s._v(" "),a("strong",[s._v("eg:127.0.0.1:5000/udp")])]),s._v(" "),a("h3",{attrs:{id:"容器互联"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器互联"}},[s._v("#")]),s._v(" 容器互联")]),s._v(" "),a("p",[s._v("使用--link参数可以让容器之间安全地进行交互 ，--link参数的格式为--link name:alias，其中name是要链接的容器的名称，alias是别名")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("// 先创建一个容器\ndocker run -it --rm --name centos-1 centos:latest\n// 在创建一个容器\ndocker run -itd --name centos-2 --link centos-1:centos-1 centos:latest\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v("Docker相当于在两个互联的容器之间创建了一个虚机通道，而且不用映射它们的端口到宿主主机上。")]),s._v(" "),a("strong",[s._v("在启动容器的时候并没有使用-p和-P标记，从而避免了暴露数据库服务端口到外部网络上。")]),s._v(" "),a("strong",[s._v("Docker通过两种方式为容器公开连接信息：")]),s._v("\n❑ **更新环境变量  **\n查看容器的环境变量 ："),a("code",[s._v("docker exec centos-1 env")]),s._v(" 使用env命令来查看容器的环境变量\n❑ "),a("strong",[s._v("更新/etc/hosts文件")])]),s._v(" "),a("h2",{attrs:{id:"使用dockerfile创建镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用dockerfile创建镜像"}},[s._v("#")]),s._v(" 使用Dockerfile创建镜像")]),s._v(" "),a("p",[s._v("Dockerfile是一个文本格式的配置文件，用户可以使用Dockerfile来快速创建自定义的镜像。\nDockerfile由一行行命令语句组成，并且支持以#开头的注释行。\n一般而言，"),a("strong",[s._v("Dockerfile主体内容分为四部分：基础镜像信息、维护者信息、镜像操作指令和容器启动时执行指令")])]),s._v(" "),a("h4",{attrs:{id:"配置指令说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置指令说明"}},[s._v("#")]),s._v(" 配置指令说明")]),s._v(" "),a("p",[s._v("Dockerfile中指令的一般格式为"),a("code",[s._v("INSTRUCTION arguments")]),s._v("，包括“"),a("strong",[s._v("配置指令")]),s._v("”（配置镜像信息）和“"),a("strong",[s._v("操作指令")]),s._v("”")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ARG")]),s._v("     \t\t定义创建镜像过程中使用的变量 唯一一个可以在FROM指令之前\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v("    \t\t指定基础镜像，必须为第一个命令（在没有ARG)\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LABEL")]),s._v(" \t\t\tLABEL指令可以为生成的镜像添加元数据标签信息。这些信息可以用来辅助过滤出特定镜像\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" \t\t\t声明镜像内服务监听的端口\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v("    \t\t\t指定环境变量，在镜像生成过程中会被后续RUN指令使用，在镜像启动的容器中也会存在\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" \t指定镜像的默认入口命令，该入口命令会在启动容器时作为根命令执行，所有传入值作为该命令的参数\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VOLUME")]),s._v(" \t\t\t创建一个数据卷挂载点\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("USER")]),s._v("\t\t\t\t指定运行容器时的用户名或UID，后续的RUN等指令也会使用指定的用户身份\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" \t\t为后续的RUN、CMD、ENTRYPOINT指令配置工作目录\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ONBUILD")]),s._v(" \t\t指定当基于所生成镜像创建子镜像时，自动执行的操作指令\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("STOPSIGNAL")]),s._v(" \t指定所创建镜像启动的容器接收退出的信号值\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("HEALTHCHECK")]),s._v(" 配置所启动容器如何进行健康检查\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHELL")]),s._v(" \t\t\t指定其他命令使用shell时的默认shell类型\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h4",{attrs:{id:"操作指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作指令"}},[s._v("#")]),s._v(" 操作指令")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" \t运行指定命令\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v("\t\t用来指定启动容器时默认执行的命令\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v("\t\t添加内容到镜像\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v("\t复制内容到镜像\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")])]),s._v(" "),a("h3",{attrs:{id:"常用指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用指令"}},[s._v("#")]),s._v(" 常用指令")]),s._v(" "),a("h4",{attrs:{id:"arg-定义创建镜像过程中使用的变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arg-定义创建镜像过程中使用的变量"}},[s._v("#")]),s._v(" "),a("code",[s._v("ARG")]),s._v(" : 定义创建镜像过程中使用的变量")]),s._v(" "),a("p",[a("strong",[s._v("唯一一个可以在FROM指令之前的指令,ARG指令定义的参数，在docker build命令中以--build-arg a_name=a_value形式赋值。如果docker build命令传递的参数，在Dockerfile中没有对应的参数，将警告")])]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 格式：")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ARG")]),s._v(" <name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("=<default value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例：")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ARG")]),s._v(" VERSION="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"7.0"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" centos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("VERSION"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h4",{attrs:{id:"from-指定所创建镜像的基础镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#from-指定所创建镜像的基础镜像"}},[s._v("#")]),s._v(" "),a("code",[s._v("FROM")]),s._v(" : 指定所创建镜像的基础镜像")]),s._v(" "),a("p",[a("strong",[s._v("tag或digest是可选的，如果不使用这两个值时，会使用latest版本的基础镜像")])]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 格式：")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" <image"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" <image"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("<tag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" <image"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("@<digest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#示例：　　")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("5.6\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h4",{attrs:{id:"label-指令可以为生成的镜像添加元数据标签信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#label-指令可以为生成的镜像添加元数据标签信息"}},[s._v("#")]),s._v(" "),a("code",[s._v("LABEL")]),s._v(" : 指令可以为生成的镜像添加元数据标签信息")]),s._v(" "),a("p",[a("strong",[s._v("使用LABEL指定元数据时，一条LABEL指定可以指定一或多条元数据，指定多条元数据时不同元数据之间通过空格分隔。推荐将所有的元数据通过一条LABEL指令指定，以免生成过多的中间镜像")])]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 格式：")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LABEL")]),s._v(" <key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("=<value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" <key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("=<value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" <key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("=<value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例：")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LABEL")]),s._v(" version="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.0"')]),s._v(" description="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"这是一个Web服务器"')]),s._v(" by="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"IT笔录"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LABEL")]),s._v(" author="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sun@qq.com"')]),s._v(" data="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2021-1-1"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h4",{attrs:{id:"expose-声明镜像内服务监听的端口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expose-声明镜像内服务监听的端口"}},[s._v("#")]),s._v(" "),a("code",[s._v("EXPOSE")]),s._v(" : 声明镜像内服务监听的端口")]),s._v(" "),a("p",[a("strong",[s._v("EXPOSE并不会让容器的端口访问到主机。要使其可访问，需要在docker run运行容器时通过-p来发布这些端口，或通过-P参数来发布EXPOSE导出的所有端口")])]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 格式：")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" <port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("<port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例：")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 80 443\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 8080    EXPOSE 11211/tcp 11211/udp\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h4",{attrs:{id:"env-指定环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#env-指定环境变量"}},[s._v("#")]),s._v(" "),a("code",[s._v("ENV")]),s._v(" : 指定环境变量")]),s._v(" "),a("p",[a("strong",[s._v("指令指定的环境变量在运行时可以被覆盖掉，如 "),a("code",[s._v("docker run --env <key>=<value> built_image")])])]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#格式：")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" <key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" <value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#<key>之后的所有内容均会被视为其<value>的组成部分，因此，一次只能设置一个变量")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" <key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("=<value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#可以设置多个变量，每个变量为一个"<key>=<value>"的键值对，如果<key>中包含空格，可以使用\\来进行转义，也可以通过""来进行标示；另外，反斜线也可以用于续行')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例：")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" myName John Doe\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" myDog Rex The Dog\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" myCat=fluffy\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h4",{attrs:{id:"entrypoint-指定镜像的默认入口命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entrypoint-指定镜像的默认入口命令"}},[s._v("#")]),s._v(" "),a("code",[s._v("ENTRYPOINT")]),s._v(": 指定镜像的默认入口命令")]),s._v(" "),a("p",[a("strong",[s._v("注ENTRYPOINT与CMD非常类似，不同的是通过docker run执行的命令不会覆盖ENTRYPOINT，而docker run命令中指定的任何参数，都会被当做参数再次传递给ENTRYPOINT。Dockerfile中只允许有一个ENTRYPOINT命令，多指定时会覆盖前面的设置，而只执行最后的ENTRYPOINT指令,在运行时，可以被--entrypoint参数覆盖掉，如 docker run --entrypoint")])]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#格式：")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"executable"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" (可执行文件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 优先)\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" command param1 param2 (shell内部命令)\n示例：\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" ubuntu\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"top"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h4",{attrs:{id:"volume-创建一个数据卷挂载点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#volume-创建一个数据卷挂载点"}},[s._v("#")]),s._v(" "),a("code",[s._v("VOLUME")]),s._v(" :创建一个数据卷挂载点")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 格式：")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VOLUME")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/path/to/dir"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例：")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VOLUME")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/data"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VOLUME")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/var/www"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/var/log/apache2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/etc/apache2"')]),s._v("\n\n注：一个卷可以存在于一个或多个容器的指定目录，该目录可以绕过联合文件系统，并具有以下功能：\n1 卷可以容器间共享和重用\n2 容器并不一定要和其它容器共享卷\n3 修改卷后会立即生效\n4 对卷的修改不会对镜像产生影响\n5 卷会一直存在，直到没有任何容器在使用它\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h4",{attrs:{id:"user-指定运行容器时的用户名或uid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#user-指定运行容器时的用户名或uid"}},[s._v("#")]),s._v(" "),a("code",[s._v("USER")]),s._v(" : 指定运行容器时的用户名或UID")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 格式:　　")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("USER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v("　　\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("USER")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("group　　\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("USER")]),s._v(" uid　　\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("USER")]),s._v(" uid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("gid　　\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("USER")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("gid　　\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("USER")]),s._v(" uid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("group \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例：    　　")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("USER")]),s._v(" www \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注：使用USER指定用户后，Dockerfile中其后的命令RUN、CMD、ENTRYPOINT都将使用该用户。镜像构建完成后，通过docker run运行容器时，可以通过-u参数来覆盖所指定的用户。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[a("strong",[s._v("WORKDIR 为后续的RUN、CMD、ENTRYPOINT指令配置工作目录，通过WORKDIR设置工作目录后，Dockerfile中其后的命令RUN、CMD、ENTRYPOINT、ADD、COPY 等命令都会在该目录下执行。在使用")]),a("code",[s._v("** docker run -w **")]),s._v("**运行容器时，可以通过-w参数覆盖构建时所设置的工作目录 **")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 格式：")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /path/to/workdir\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例：")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /a  (这时工作目录为/a)\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" b  (这时工作目录为/a/b)\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" c  (这时工作目录为/a/b/c)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h4",{attrs:{id:"onbuild-指定当基于所生成镜像创建子镜像时-自动执行的操作指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#onbuild-指定当基于所生成镜像创建子镜像时-自动执行的操作指令"}},[s._v("#")]),s._v(" "),a("code",[s._v("ONBUILD")]),s._v(" : 指定当基于所生成镜像创建子镜像时，自动执行的操作指令")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#格式：　")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ONBUILD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("INSTRUCTION"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#示例：")]),s._v("\n　　"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ONBUILD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" . /app/src\n　　"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ONBUILD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" /usr/local/bin/python"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("build "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("dir /app/src\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注：当所构建的镜像被用做其它镜像的基础镜像，该镜像中的触发器将会被钥触发")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h4",{attrs:{id:"run-运行指定命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-运行指定命令"}},[s._v("#")]),s._v(" "),a("code",[s._v("RUN")]),s._v("： 运行指定命令")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[s._v("RUN用于在镜像容器中执行命令，其有以下两种命令执行方式：\nshell执行\n格式：\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" <command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n    \nexec执行\n格式：\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"executable"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    \n示例：\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"executable"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apk update\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/etc/execfile"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"arg1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"arg1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n注：RUN指令创建的中间镜像会被缓存，并会在下次构建中使用。如果不想使用这些缓存镜像，可以在构建时指定"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("no"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("cache参数，如：docker build "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("no"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("cache\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h4",{attrs:{id:"cmd-指令用来指定启动容器时默认执行的命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cmd-指令用来指定启动容器时默认执行的命令"}},[s._v("#")]),s._v(" "),a("code",[s._v("CMD")]),s._v(" ： 指令用来指定启动容器时默认执行的命令")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[s._v("格式：\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"executable"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" (执行可执行文件，优先)\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" (设置了ENTRYPOINT，则直接调用ENTRYPOINT添加参数)\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" command param1 param2 (执行shell内部命令)\n示例：\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" echo "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This is a test."')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v(" wc "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/bin/wc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--help"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    \n 注： CMD不同于RUN，CMD用于指定在容器启动时所要执行的命令，而RUN用于指定镜像构建时所要执行的命令。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h4",{attrs:{id:"add-添加内容到镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-添加内容到镜像"}},[s._v("#")]),s._v(" "),a("code",[s._v("ADD")]),s._v("：添加内容到镜像")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[s._v("格式：\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" <src"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v(" <dest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<src>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<dest>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 用于支持包含空格的路径\n示例：\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" hom* /mydir/          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 添加所有以"hom"开头的文件')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" hom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("?")]),s._v(".txt /mydir/      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# ? 替代一个单字符,例如："home.txt"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" test relativeDir/     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 添加 "test" 到 `WORKDIR`/relativeDir/')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" test /absoluteDir/    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 添加 "test" 到 /absoluteDir/')]),s._v("\n   \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h4",{attrs:{id:"copy-复制内容到镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#copy-复制内容到镜像"}},[s._v("#")]),s._v(" "),a("code",[s._v("COPY")]),s._v("：复制内容到镜像")]),s._v(" "),a("p",[a("strong",[s._v("COPY与ADD指令功能类似，但是是不会自动解压文件，也不能访问网络资源，当使用本地目录为源目录时，推荐使用COPY")]),s._v("\n下载 nginx-1.18.0.tar.gz ，epel-release-latest-7.noarch.rpm 文件在同一目录之下\n并且在当前目录下 新建 Dockerfile 文件")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This nginx Dockerfile")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Version 1.0")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Base images 基础镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" centos\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#MAINTAINER 维护者信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("MAINTAINER")]),s._v(" sunwukong \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#ENV 设置环境变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" PATH /usr/local/nginx/sbin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("$PATH\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#ADD  文件放在当前目录下，拷过去会自动解压")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" ./nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("1.18.0.tar.gz /usr/local/  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" ./epel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("release"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("latest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("7.noarch.rpm /usr/local/  \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#RUN 执行以下命令 ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" rpm "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("ivh /usr/local/epel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("release"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("latest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("7.noarch.rpm\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" yum install "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("y wget lftp gcc gcc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("c++ make openssl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("devel pcre"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("devel pcre && yum clean all\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" useradd "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("s /sbin/nologin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("M www\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#WORKDIR 相当于cd")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /usr/local/nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("1.8.0 \n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" ./configure "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("prefix=/usr/local/nginx "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("user=www "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("group=www "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("with"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("http_ssl_module "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("with"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("pcre && make && make install\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" echo "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"daemon off;"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" /etc/nginx.conf\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#EXPOSE 映射端口")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 80\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#CMD 运行以下命令")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginx"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br")])]),a("h3",{attrs:{id:"dockerfile构建镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile构建镜像"}},[s._v("#")]),s._v(" Dockerfile构建镜像")]),s._v(" "),a("p",[a("code",[s._v("docker build -t Name:Tag -f Dockerfile .")]),s._v(" 构建镜像\n**")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[s._v("--add-host list")]),s._v(" "),a("th",{staticStyle:{"text-align":"left"}},[s._v("添加自定义Host到ip的映射（主机:ip）")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--build-arg list")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("设置构建时的变量")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--cache-from strings")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("将镜像视为缓存源")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--cgroup-parent string")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("可选的容器父cgroup")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--compress")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("使用gzip工具压缩构建的上下文")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--console")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("显示控制台输出，仅使用 buildkit，参数有：true、false、auto（默认为 auto）")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--cpu-period int")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("限制CPU CFS（完全公平的调度）的周期")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--cpu-quota int")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("限制CPU CFS（完全公平的调度）的限额")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("-c, --cpu-shares int")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("设置CUP的共享权重")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--cpuset-cpus string")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("允许执行的cpu个数 （0-3,0,1）")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--cpuset-mems string")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("允许执行的MEM个数 （0-3,0,1）")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--disable-content-trust")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("跳过镜像的验证（默认为 true）")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("-f, --file string")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("构建的Dockerfile的名称（默认为 ‘PATH/Dockerfile’）")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--force-rm")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("总是移除中间容器")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--iidfile string")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("将镜像ID写入到指定文件")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--isolation string")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("容器隔离技术")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--label list")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("为镜像设置元数据")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("-m, --memory bytes")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("内存限额")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--memory-swap bytes")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("如果启用无限交换，则交换限制等于内存加上交换:'-1'即可")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--network string")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("在构建期间为 RUN 指令设置网络模式（默认为 “default”）")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--no-cache")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("在构建映像时不使用缓存（设定后，每次都会重新去拉取，默认使用缓存的）")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--platform string")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("如果服务器具有多平台能力，则设置该平台")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--pull")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("总是尝试拉取该镜像的新版本")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("-q, --quiet")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("镜像构建成功后禁止生成输出和打印镜像的ID")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--rm")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("构建成功后删除中间容器（默认为 true）")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--security-opt strings")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("安全选项")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--shm-size bytes")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("设定/dev/shm的大小")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--squash")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("将新建的镜像层压缩成一个新的镜像层")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--stream")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("将流附加到服务器以协商构建上下文")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("-t, --tag list")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("名称和可选的标签（格式为 'name:tag' ）")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--target string")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("设置需要构建的目标构建阶段")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("--ulimit ulimit")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("U 限制项 (默认为 [])")])])])]),s._v(" "),a("p",[s._v("**")]),s._v(" "),a("h2",{attrs:{id:"docker-网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-网络"}},[s._v("#")]),s._v(" Docker 网络")]),s._v(" "),a("p",[s._v("默认情况下容器与容器、容器与宿主机的网络是隔离开来的,docker 网络需要解决的就是 容器于容器的之间的互通。")]),s._v(" "),a("h3",{attrs:{id:"网络模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络模式"}},[s._v("#")]),s._v(" 网络模式")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("Docker网络模式")]),s._v(" "),a("th",[s._v("配置")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("host模式")]),s._v(" "),a("td",[s._v("--net=host")]),s._v(" "),a("td",[s._v("容器和宿主机共享Network namespace")])]),s._v(" "),a("tr",[a("td",[s._v("container模式")]),s._v(" "),a("td",[s._v("--net=container:NAME_or_ID")]),s._v(" "),a("td",[s._v("容器和另外一个容器共享Network namespace，kubernetes中的pod就是多个容器共享一个Network namespace")])]),s._v(" "),a("tr",[a("td",[s._v("none模式")]),s._v(" "),a("td",[s._v("--net=none")]),s._v(" "),a("td",[s._v("容器有独立的Network namespace,")])]),s._v(" "),a("tr",[a("td",[s._v("但并没有对其进行任何网络设置，如分配veth pair 和网桥连接，配置IP等")]),s._v(" "),a("td"),s._v(" "),a("td")]),s._v(" "),a("tr",[a("td",[s._v("bridge模式")]),s._v(" "),a("td",[s._v("--net=bridge （默认为该模式）")]),s._v(" "),a("td",[s._v("网络桥接模式，将自动生成独有的Network namespace")])]),s._v(" "),a("tr",[a("td",[s._v("自定义模式")]),s._v(" "),a("td",[s._v("--net=自定义网络名称")]),s._v(" "),a("td")])])]),s._v(" "),a("h3",{attrs:{id:"host模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#host模式"}},[s._v("#")]),s._v(" host模式")]),s._v(" "),a("p",[s._v("原理：如果启动容器的时候使用host模式，"),a("strong",[s._v("那么这个容器将不会获得一个独立的Network Namespace，而是和宿主机共用一个Network Namespace")]),s._v("。"),a("strong",[s._v("容器将不会虚拟出自己的网卡，配置自己的IP等，而是使用宿主机的IP和端口")]),s._v("。但是，"),a("strong",[s._v("容器的其他方面，如文件系统、进程列表等还是和宿主机隔离的。")]),s._v(" "),a("strong",[s._v("使用host模式的容器可以直接使用宿主机的IP地址与外界通信，容器内部的服务端口也可以使用宿主机的端口，不需要进行NAT")]),s._v("，"),a("strong",[s._v("host最大的优势就是网络性能比较好，但是docker host上已经使用的端口就不能再用了，网络的隔离性不好。")]),s._v("\n**\n"),a("strong",[a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/1024167/1610590030647-7f1f8a08-da68-4027-8bd1-c11c6aa61abe.png#align=left&display=inline&height=589&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1178&originWidth=1746&size=296255&status=done&style=stroke&width=873",alt:"image.png"}})]),s._v("\n**")]),s._v(" "),a("h3",{attrs:{id:"container模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#container模式"}},[s._v("#")]),s._v(" container模式")]),s._v(" "),a("p",[s._v("这个模式指定新创建的容器和已经存在的一个容器共享一个 Network Namespace，而不是和宿主机共享。新创建的容器不会创建自己的网卡，配置自己的 IP，而是和一个指定的容器共享 IP、端口范围等。同样，两个容器除了网络方面，其他的如文件系统、进程列表等还是隔离的。两个容器的进程可以通过 lo 网卡设备通信")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/1024167/1610590030813-bcecebc1-6d24-46db-9125-e3475dfa87f2.png#align=left&display=inline&height=568&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1136&originWidth=1910&size=292388&status=done&style=stroke&width=955",alt:"image.png"}})]),s._v(" "),a("h3",{attrs:{id:"none模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#none模式"}},[s._v("#")]),s._v(" none模式")]),s._v(" "),a("p",[s._v("使用none模式，Docker容器拥有自己的Network Namespace，但是，并不为Docker容器进行任何网络配置。也就是说，这个Docker容器没有网卡、IP、路由等信息。需要我们自己为Docker容器添加网卡、配置IP等。\n这种网络模式下容器只有lo回环网络，没有其他网卡。none模式可以在容器创建时通过--network=none来指定。这种类型的网络没有办法联网，封闭的网络能很好的保证容器的安全性\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/1024167/1610590030993-15476566-7ebc-4978-92a1-6275249db5ba.png#align=left&display=inline&height=535&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1070&originWidth=1852&size=245458&status=done&style=stroke&width=926",alt:"image.png"}})]),s._v(" "),a("h3",{attrs:{id:"bridge模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bridge模式"}},[s._v("#")]),s._v(" bridge模式")]),s._v(" "),a("p",[s._v("当Docker进程启动时，会在主机上创建一个名为"),a("code",[s._v("docker0")]),s._v("的虚拟网桥，此主机上启动的Docker容器会连接到这个虚拟网桥上。虚拟网桥的工作方式和物理交换机类似，这样主机上的所有容器就通过交换机连在了一个二层网络中\n从"),a("code",[s._v("docker0")]),s._v("子网中分配一个IP给容器使用，并设置docker0的IP地址为容器的默认网关。在主机上创建一对虚拟网卡"),a("code",[s._v("veth pair")]),s._v("设备，Docker将veth pair设备的一端放在新创建的容器中，并命名为eth0（容器的网卡），另一端放在主机中，以vethxxx这样类似的名字命名，并将这个网络设备加入到docker0网桥中。可以通过"),a("code",[s._v("brctl show")]),s._v("命令查看\nbridge模式是docker的默认网络模式，不写--net参数，就是bridge模式。使用"),a("code",[s._v("docker run -p")]),s._v("时，docker实际是在iptables做了NAT规则，实现端口转发功能。可以使用"),a("code",[s._v("iptables -t nat -vnL")]),s._v("查看")]),s._v(" "),a("p",[a("code",[s._v("veth-pair")]),s._v("就是一对的虚拟设备接口，它都是成对出现的。一端连着协议栈，一端彼此相连着")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/1024167/1610590031155-ac887d2d-818e-4f7c-847e-e93dfd5466a9.png#align=left&display=inline&height=513&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1026&originWidth=1856&size=317257&status=done&style=stroke&width=928",alt:"image.png"}})]),s._v(" "),a("h4",{attrs:{id:"bridge模存在的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bridge模存在的问题"}},[s._v("#")]),s._v(" bridge模存在的问题")]),s._v(" "),a("p",[s._v("按照以下方式创建了两个容器，在通过名称互联访问时候，连接不用")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker run -itd  --name centos-bdg-01 centos:latest\ndocker run -itd  --name centos-bdg-02 centos:latest\n\n// 会出现以下问题\ndocker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it centos-bdg-01 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" centos-bdg-02\nping: centos-bdg-02: Name or "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" not known\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"自定义模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义模式"}},[s._v("#")]),s._v(" 自定义模式")]),s._v(" "),a("h4",{attrs:{id:"docker-network-ls列出本地网络模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-network-ls列出本地网络模式"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker network ls")]),s._v("列出本地网络模式")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker network "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\nNETWORK ID     NAME      DRIVER    SCOPE\n63d9493bce38   bridge    bridge    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 桥接模式")]),s._v("\nde1105dfa5a8   "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# host模式")]),s._v("\n87441a7540aa   none      null      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" \t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# none模式")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h4",{attrs:{id:"docker-network-create-创建一个网络模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-network-create-创建一个网络模式"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker network create")]),s._v("     创建一个网络模式")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("--driver 连接的网络模式")])]),s._v(" "),a("li",[s._v("**--subnet 子网掩码 192.168.0.0/16 **")]),s._v(" "),a("li",[a("strong",[s._v("--gateway 192.168.1.0 网关")])])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker network create --driver bridge  --subnet "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.0/16  --gateway "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.0 mynet\n\n336cdb202d7a5d7f1fb3f8dc087d5d6e1b7aa46b3513186c8cb35bc1125a0784\ndocker network "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\nNETWORK ID     NAME      DRIVER    SCOPE\n63d9493bce38   bridge    bridge    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\nde1105dfa5a8   "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\n336cdb202d7a   mynet     bridge    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\n87441a7540aa   none      null      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\n\n\n创建自定义模式的docker容器\ndocker run -itd  --name centos-net-01 --network mynet centos:latest\ndocker run -itd  --name centos-net-02 --network mynet centos:latest\n\n再次执行 可以发现容器之间是互通的\ndocker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it centos-net-01 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" centos-net-02\nPING centos-net-02 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("56")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("84")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" bytes of data.\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" bytes from centos-net-02.mynet "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("icmp_seq")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ttl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("time")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.096")]),s._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" bytes from centos-net-02.mynet "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("icmp_seq")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ttl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("time")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.162")]),s._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" bytes from centos-net-02.mynet "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("icmp_seq")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ttl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("time")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.160")]),s._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" bytes from centos-net-02.mynet "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("icmp_seq")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ttl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("time")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.181")]),s._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" bytes from centos-net-02.mynet "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("icmp_seq")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ttl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("time")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.158")]),s._v(" ms\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("h4",{attrs:{id:"docker-network-inspect-显示一个或多个网络上的详细信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-network-inspect-显示一个或多个网络上的详细信息"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker network inspect")]),s._v("    显示一个或多个网络上的详细信息")]),s._v(" "),a("h4",{attrs:{id:"docker-network-connect-将容器连接到网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-network-connect-将容器连接到网络"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker network connect")]),s._v("  将容器连接到网络")]),s._v(" "),a("p",[a("code",[s._v("docker network connect [OPTIONS] NETWORK CONTAINER")]),s._v("\n目前环境中有一下几个容器\n"),a("strong",[s._v("centos-bdg-xx 走原始的桥接模式的 docker0 网卡 网段实在 172.17.0.0/16")]),s._v(" "),a("strong",[s._v("centos-net-xx 走的是自定义的mynet模式的 mynet网卡 网段 在 192.168.0.0/16")])]),s._v(" "),a("p",[s._v("怎么实现 centos-bdg-xx 到  centos-net-- 的通信")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\nCONTAINER ID   IMAGE           COMMAND       CREATED          STATUS          PORTS     NAMES\n1573b7088604   centos:latest   "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" minutes ago    Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" minutes              centos-net-02\n22a4f34fb7b8   centos:latest   "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" minutes ago    Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" minutes              centos-net-01\n22844f330ba3   centos:latest   "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v(" minutes ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v(" minutes             centos-bdg-02\n8f7ae3be00e3   centos:latest   "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v(" minutes ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v(" minutes             centos-bdg-01\n\n\ndocker network connect mynet centos-bdg-01\ndocker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it centos-bdg-01  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" centos-net-01\nPING centos-net-01 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("56")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("84")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" bytes of data.\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" bytes from centos-net-01.mynet "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("icmp_seq")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ttl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("time")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.095")]),s._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" bytes from centos-net-01.mynet "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("icmp_seq")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ttl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("time")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.161")]),s._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" bytes from centos-net-01.mynet "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("icmp_seq")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ttl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("time")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.202")]),s._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" bytes from centos-net-01.mynet "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("icmp_seq")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ttl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("time")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.153")]),s._v(" ms\n\n\ndocker network inspect mynet\n····\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Containers"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1573b70886040ce5922a0366e866bd6c5ac91acd851dd53dd43b2c2fbc388389"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"centos-net-02"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"EndpointID"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"968dd40f23362c3066df4092a2be6955c8681eaf38e07e505344492bc383a8c9"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MacAddress"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"02:42:c0:a8:00:02"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"IPv4Address"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"192.168.0.2/16"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"IPv6Address"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"22a4f34fb7b8becd82719d16cecf84c54ca48bc184964042aecec74d18d1c931"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"centos-net-01"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"EndpointID"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b2c7cf4d66fdeeea5559bd81fd3166bf78e0e3064e5016e71e51ba5543c5ded4"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MacAddress"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"02:42:c0:a8:00:01"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"IPv4Address"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"192.168.0.1/16"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"IPv6Address"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n      // 容器连接到自定义网卡中\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"8f7ae3be00e349005326d1fd4ff57fd0e19867b66a23bbc73c9568c9467b7c6f"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"centos-bdg-01"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"EndpointID"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"22427d81dc7386d04c7502ae90c99b812503e8514a13c1e89207435a2ec9ebb4"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MacAddress"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"02:42:c0:a8:00:03"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"IPv4Address"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"192.168.0.3/16"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"IPv6Address"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/1024167/1610590031354-0ca2af1d-4cfd-4ac7-96e8-21894df04e70.png#align=left&display=inline&height=636&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1272&originWidth=2334&size=530914&status=done&style=stroke&width=1167",alt:"image.png"}})]),s._v(" "),a("h4",{attrs:{id:"docker-network-rm-移除一个网络模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-network-rm-移除一个网络模式"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker network rm")]),s._v("  移除一个网络模式")]),s._v(" "),a("h4",{attrs:{id:"docker-network-prune-删除所有未使用的网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-network-prune-删除所有未使用的网络"}},[s._v("#")]),s._v(" "),a("code",[s._v("docker network prune")]),s._v(" 删除所有未使用的网络")]),s._v(" "),a("p",[s._v("**")]),s._v(" "),a("h2",{attrs:{id:"docker-可视化管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-可视化管理"}},[s._v("#")]),s._v(" Docker 可视化管理")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker run -itd --restart always --name portainer-web -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9000")]),s._v(":9000  -v /var/run/docker.sock:/var/run/docker.sock  portainer/portainer\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);