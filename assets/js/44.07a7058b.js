(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{515:function(a,s,n){"use strict";n.r(s);var e=n(2),t=Object(e.a)({},(function(){var a=this,s=a.$createElement,n=a._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"路径处理path模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#路径处理path模块"}},[a._v("#")]),a._v(" 路径处理path模块")]),a._v(" "),n("p",[a._v("path是node中专门处理路径的一个核心模块")]),a._v(" "),n("ul",[n("li",[a._v("将多个参数值字符串结合为一个路径字符串\npath.join")])]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var path = require('path');\n\n//将字符串拼接成路径的形式(字符串之间用/隔开)\nconsole.log(path.join('divr', 'filename'));\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br")])]),n("ul",[n("li",[a._v("获取一个路径中的文件名\npath.basename")])]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var path = require('path');\n\n//将字符串拼接成路径的形式(字符串之间用/隔开)\nvar pathname = path.join('divr', 'dir1', 'dir2', 'filename');\n\n//获取路径中的文件名(最后一个/后面的内容)\nconsole.log(path.basename(pathname));\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br")])]),n("ul",[n("li",[a._v("获取一个路径中的扩展名\npath.extname")])]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var path = require('path');\n\n//将字符串拼接成路径的形式(字符串之间用/隔开)\nvar pathname = path.join('divr', 'dir1', 'dir2', 'filename.txt');\n\n//获取路径中文件名的后缀(文件名中.后面的内容,没有.返回空)\nconsole.log(path.extname(pathname));\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br")])]),n("ul",[n("li",[a._v("操作系统提定的文件分隔符\npath.sep")])]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var path = require('path');\n\nconsole.log(path.sep); //特定平台下的分割符(window和mac下不一样)\n\nvar filepath = path.join('file', 'dir1', 'dir2', 'dir3', 'filename');\nconsole.log(filepath.split(path.sep));  //将路径名进行分割\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br")])]),n("ul",[n("li",[a._v("属性值为系统指定的环境变量路径分隔符\npath.delimiter")])]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var path = require('path');\n\nconsole.log(path.delimiter); //特定平台的路径分隔符\n\n//获取环境变量的值\nconsole.log(process.env.PATH);\n\nconsole.log(process.env.PATH.split(path.delimiter));//将环境变量的路径集合, 按照路径分隔符分割成若干个子路径\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br")])]),n("ul",[n("li",[a._v("将非标准的路径字符串转化为标准路径字符串\npath.normalize")])]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var path = require('path');\n\nvar filepath = '../../././././../dir1////dir/filename.txt';\n\nconsole.log(path.normalize(filepath)); //将非标准的路径字符串转换成标准的路径字符串\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br")])]),n("p",[a._v("特点：\n可以解析 . 和 ..\n多个杠可以转换成一个杠\n在windows下反杠会转化成正杠\n如结尾以杠结尾的，则保留斜杠")]),a._v(" "),n("p",[a._v("取得绝对路径")]),a._v(" "),n("ul",[n("li",[a._v("resolve")])]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var path = require('path');\n\nvar filename = '1. join.js';\n\nconsole.log(path.resolve(filename)); //根据文件名获取文件的绝对路径\n\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br")])]),n("p",[a._v("特点：\n以应用程序根目录为起点\n如果参数是普通字符串，则意思是当前目录的下级目录\n如果参数是.. 回到上一级目录\n如果是/开头表示一个绝对的根路径")])])}),[],!1,null,null,null);s.default=t.exports}}]);