(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{638:function(v,t,e){"use strict";e.r(t);var n=e(2),_=Object(n.a)({},(function(){var v=this,t=v.$createElement,e=v._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"事件绑定和普通事件-有什么区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件绑定和普通事件-有什么区别"}},[v._v("#")]),v._v(" 事件绑定和普通事件 有什么区别")]),v._v(" "),e("ul",[e("li",[v._v("事件：事件是由浏览器动作（如浏览器载入文档onload）和用户动作（如点击onclick）触发所产生得人机交互瞬间。")]),v._v(" "),e("li",[v._v("普通事件："),e("strong",[v._v("给html元素添加一个特定的属性（比如：onclick）")])]),v._v(" "),e("li",[v._v("事件绑定：js代码中通过标记(id tag class)获取元素，给元素添加特定的方法(比如onclick)")]),v._v(" "),e("li",[v._v("事件流：描述事件从页面到接受处理的流程")])]),v._v(" "),e("p",[e("strong",[v._v("DOM事件流模型")]),v._v(" "),e("strong",[v._v("事件冒泡")]),v._v("\n由目标元素上所产生的动作为事件触发源，然后事件层层向其父代递交，直至到document节点，期间可能产生连锁的事件触发，如上述代码结果button->div->body->html->document。【微软提出】")]),v._v(" "),e("p",[e("strong",[v._v("事件捕捉")]),v._v("\n与上述完全相反document->html->body->div->button，下面直接代码演示。【网景提出】")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",[v._v("1、所有现代浏览器都支持事件冒泡，但在具体实现中略有差别："),e("br"),v._v("\n+ IE5.5及更早版本中事件冒泡会跳过元素(从body直接跳到document)。"),e("br"),v._v("\n+ IE9、Firefox、Chrome、和Safari则将事件一直冒泡到window对象。"),e("br"),v._v("\n2、IE9、Firefox、Chrome、Opera、和Safari都支持事件捕获。尽管DOM标准要求事件应该从document对象开始传播，但这些浏览器都是从window对象开始捕获事件的。"),e("br"),v._v("\n3、由于老版本浏览器不支持，很少有人使用事件捕获。建议使用事件冒泡。"),e("br")])]),v._v(" "),e("p",[e("strong",[v._v("事件流的三个阶段")])]),v._v(" "),e("ul",[e("li",[e("p",[v._v("事件捕捉阶段：由外部动作触发到传递到目标元素最近的父节点的过程，途中不会接受事件。")])]),v._v(" "),e("li",[e("p",[v._v("处于目标元素阶段：从事件传入到目标元素之初，到未接收事件之末的过程。")])]),v._v(" "),e("li",[e("p",[v._v("冒泡阶段：从事件接受处理触发之初，到事件递交document节点之末的过程，途中接受事件。")])])]),v._v(" "),e("p",[v._v("事件代理【利用事件冒泡:如果一个父节点内含有多个子节点，并且每个子节点都存在同一事件类型（如onclick）。我们可以为其父代设置一个事件处理器（onclick），来避免为其每个子代设置一个事件处理器，降低内存，提高性能。")]),v._v(" "),e("p",[e("strong",[v._v("传统事件绑定和符合W3C标准的事件绑定有什么区别？")]),v._v(" "),e("strong",[v._v("一级事件")]),v._v("\ndiv1.οnclick=function(){};\n1、如果说给同一个元素绑定了两次或者多次相同类型的事件，那么后面的绑定会覆盖前面的绑定\n2、不支持DOM事件流 事件捕获阶段目标元素阶段=>事件冒泡阶段\n"),e("strong",[v._v("二级事件")]),v._v("\naddEventListener\n1、如果说给同一个元素绑定了两次或者多次相同类型的事件，所有的绑定将会依次触发\n2、支持DOM事件流的\n3、进行事件绑定传参不需要on前端\n"),e("strong",[v._v("true - 事件句柄在捕获阶段执行 , false- false- 默认。事件句柄在冒泡阶段执行")]),v._v(" "),e("strong",[v._v("event.stopPropagation()")]),v._v("\naddEventListener(“click”,function(){},false);//此时的事件就是在事件冒泡阶段执行")]),v._v(" "),e("p",[e("strong",[v._v("ie9开始，ie11 edge：addEventListener")])]),v._v(" "),e("ul",[e("li",[v._v("ie9以前：attachEvent/detachEvent\n"),e("ul",[e("li",[v._v("1、进行事件类型传参需要带上on前缀")]),v._v(" "),e("li",[v._v("2、这种方式只支持事件冒泡，不支持事件捕获")]),v._v(" "),e("li",[v._v("事件绑定是指把事件注册到具体的元素之上，普通事件指的是可以用来注册的事件")])])])]),v._v(" "),e("h2",{attrs:{id:"ie和dom事件流的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ie和dom事件流的区别"}},[v._v("#")]),v._v(" IE和DOM事件流的区别")]),v._v(" "),e("ul",[e("li",[v._v("IE9以前：attachEvent(“onclick”)、detachEvent(“onclick”)")]),v._v(" "),e("li",[v._v("IE9开始跟DOM事件流是一样的，都是addEventListener")])]),v._v(" "),e("p",[e("strong",[v._v("比较attachEvent和addEventListener：")])]),v._v(" "),e("ul",[e("li",[v._v("1、"),e("strong",[v._v("attachEvent只支持事件冒泡")]),v._v("，"),e("strong",[v._v("addEventListener既支持事件冒泡，也支持事件捕获")])]),v._v(" "),e("li",[v._v("2、参数：attachEvent事件类型需要on前缀 addEventListener事件类型不需要on前缀")]),v._v(" "),e("li",[v._v("3、如果使用attachEvent对一个元素的目标阶段绑定了多次事件，那么会按照绑定顺序的相反顺序进行触发，如果使用addEventListener对一个元素的目标阶段绑定了多次事件，那么会按照绑定顺序进行触发")])]),v._v(" "),e("h2",{attrs:{id:"ie和标准下有哪些兼容性的写法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ie和标准下有哪些兼容性的写法"}},[v._v("#")]),v._v(" IE和标准下有哪些兼容性的写法")]),v._v(" "),e("ul",[e("li",[v._v("a、获取事件对象：var ev = ev || window.event 或者  var ev=ev?ev:window.evnet;")]),v._v(" "),e("li",[v._v("srcElement：IE9之前的浏览器用来获取事件目标元素")]),v._v(" "),e("li",[v._v("target：IE9+、ff、chrome用来获取事件的目标元素")]),v._v(" "),e("li",[v._v("b、获取事件目标元素：var target = ev.srcElement||ev.target")])]),v._v(" "),e("h2",{attrs:{id:"如何阻止事件冒泡和默认事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何阻止事件冒泡和默认事件"}},[v._v("#")]),v._v(" 如何阻止事件冒泡和默认事件")]),v._v(" "),e("p",[e("strong",[v._v("默认行为：html标签所具有的默认行为，比如：")])]),v._v(" "),e("ul",[e("li",[v._v("a、点击a标签，就会默认跳转到指定的页面")]),v._v(" "),e("li",[v._v("b、点击submit按钮，就会自动提交表单\n适用场景：")]),v._v(" "),e("li",[v._v("1、异步操作")]),v._v(" "),e("li",[v._v("2、提交表单之前对表单进行一些基本的验证，比如邮箱是否合法，用户名是不是满足指定的格式,为了不让a点击之后跳转，我们就要给他的点击事件进行阻止")]),v._v(" "),e("li",[v._v("3、文本框获得焦点")])]),v._v(" "),e("p",[e("strong",[v._v("阻止事件冒泡：")])]),v._v(" "),e("ul",[e("li",[v._v("IE9 + FF:"),e("code",[v._v("Chrome：e. stopPropagation()")]),v._v(";")]),v._v(" "),e("li",[v._v("ie9之前:"),e("code",[v._v("window.event.cancelBubble=true")]),v._v(" ;")])]),v._v(" "),e("p",[e("strong",[v._v("阻止默认行为：")])]),v._v(" "),e("ul",[e("li",[v._v("IE9之前:"),e("code",[v._v("window.event.returnValue=false")]),v._v(";")]),v._v(" "),e("li",[v._v("IE9+ FF:"),e("code",[v._v("Chrome： e.preventDefault()")]),v._v(";")])])])}),[],!1,null,null,null);t.default=_.exports}}]);