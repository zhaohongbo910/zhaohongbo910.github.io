(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{565:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"浏览器的事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的事件循环"}},[t._v("#")]),t._v(" 浏览器的事件循环")]),t._v(" "),a("p",[t._v("抛出问题：\n1、什么是同步和异步？\n2、实现异步的核心是什么？")]),t._v(" "),a("p",[a("a",{attrs:{name:"rcZhw"}})]),t._v(" "),a("h1",{attrs:{id:"_1、浏览器是多进程多线程的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、浏览器是多进程多线程的"}},[t._v("#")]),t._v(" 1、浏览器是多进程多线程的")]),t._v(" "),a("p",[a("strong",[t._v("浏览器每个进程有多个线程，主要有以下线程")])]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("GUI渲染线程：")])]),t._v(" "),a("ul",[a("li",[t._v("解析html文档生成DOM")]),t._v(" "),a("li",[t._v("css代码转换为cssom (css object model)")]),t._v(" "),a("li",[t._v("结合DOM和CSSOM生成渲染树")]),t._v(" "),a("li",[t._v("生成布局（layout）")]),t._v(" "),a("li",[t._v("将布局绘制(paint)在屏幕上")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("JS 引擎线程")])])])]),t._v(" "),a("p",[t._v("负责处理Javascript脚本程序。（例如V8引擎）JS引擎线程负责解析Javascript脚本，运行代码。 一个进程中无论什么时候都只有一个JS线程在运行JS程序 （也就是一个进程中只有一个JS线程，也就是我们常说的JS是单线程的）JS引擎一直等待着任务队列中任务的到来，然后加以处理， 注意，"),a("strong",[t._v("GUI渲染线程与JS引擎线程是互斥的，所以如果JS执行的时间过长，这样就会造成页面的渲染不连贯，导致页面渲染加载阻塞")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("strong",[t._v("事件触发线程")])])]),t._v(" "),a("p",[t._v("归属于浏览器而不是JS引擎，用来控制事件循环（可以理解，JS引擎自己都忙不过来，需要浏览器另开线程协助） 当JS引擎执行代码块如鼠标点击、AJAX异步请求等会将对应任务添加到事件线程中,当对应的事件符合触发条件被触发时，该线程会把事件添加到待处理队列的队尾，等待JS引擎的处理 注意，由于JS的单线程关系，所以这些待处理队列中的事件都得排队等待JS引擎处理（当JS引擎空闲时才会去执行）")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("strong",[t._v("定时触发器线程")])])]),t._v(" "),a("p",[t._v("传说中的setInterval与setTimeout所在线程,浏览器定时计数器并不是由JavaScript引擎计数的,（因为JavaScript引擎是单线程的, 如果处于阻塞线程状态就会影响记计时的准确）因此通过单独线程来计时并触发定时（计时完毕后，添加到事件队列中，等待JS引擎空闲后执行） 注意，W3C在HTML标准中规定，规定要求setTimeout中低于4ms的时间间隔算为4ms。")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[a("strong",[t._v("异步http请求线程")])])]),t._v(" "),a("p",[t._v("在XMLHttpRequest在连接后是通过浏览器新开一个线程请求,将检测到状态变更时，如果设置有回调函数，异步线程就产生状态变更事件，将这个回调再放入事件队列中。再由JavaScript引擎执行。")]),t._v(" "),a("p",[a("a",{attrs:{name:"7Cm5E"}})]),t._v(" "),a("h3",{attrs:{id:"同步异步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步异步"}},[t._v("#")]),t._v(" 同步异步")]),t._v(" "),a("ul",[a("li",[t._v("**同步：**在一个线程上（主栈/主任务队列），同一个时间只能做一件事情，当前事情完成后才能进行下一件事情（先把一个任务进栈执行，执行完成出栈，在把下一个任务进栈...）")]),t._v(" "),a("li",[a("strong",[t._v("异步：")]),t._v(" 在主栈中执行一个任务，但是发现这个任务是一个异步的操作，我们会把它移除主栈，放到等待任务队列中（此时浏览器会分配其它线程监听异步任务是否到达指定的执行时间），如果主栈执行完成，监听者会把到达时间的异步任务重新放到主栈中执行...")])]),t._v(" "),a("p",[t._v("异步是在Web 2.0中起，是因为在中JavaScript在线程上， 且它还与UI用一个线程。这意味着JavaScript在执行的时候UI渲染和响应是处于停滞状态的。在高性能JavaScript一书中经过，脚本的时执行时间超过100ms，用户就用就会感到页面卡顿，以为网页停滞响应。在B/S中架构的模型中 ，网络的速度限制给网页的实时体验造成了很大的影响，如果网页需要获取一个网络资源，通过同步的方式获取的时候，JavaScript需要等待资源从服务端获取后才能继续，这期间UI将停顿，不响应用户的行为。可以想象，这样的用户体验会很差。如果用异步的方式，在下载资源期间，JavaScript和UI渲染的执行都不会处于等待状态，可以继续响应用户的交换行为，给用户一个鲜活的页面")]),t._v(" "),a("p",[a("a",{attrs:{name:"R35VZ"}})]),t._v(" "),a("h1",{attrs:{id:"_2、单线程如何做到异步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、单线程如何做到异步"}},[t._v("#")]),t._v(" 2、单线程如何做到异步")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/464085/1601025994541-c55f1fc7-e983-4832-a072-433fa6f2b313.png#align=left&display=inline&height=429&margin=%5Bobject%20Object%5D&name=%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5.png&originHeight=429&originWidth=897&size=11340&status=done&style=none&width=897",alt:"同步异步.png"}})]),t._v(" "),a("p",[t._v("JS的任务分为 同步 和 异步 两种，它们的处理方式也不同，"),a("strong",[t._v("同步任务")]),t._v("是直接在主线程上排队执行，"),a("strong",[t._v("异步任务")]),t._v("则会被放到任务队列中，若有多个任务（异步任务）则要在任务队列中排队等待，任务队列类似一个缓冲区，任务下一步会被移到"),a("strong",[t._v("调用栈")]),t._v("（call stack），然后主线程执行调用栈的任务。在主线程执行完以后，检查"),a("strong",[t._v("调用栈是否为空")]),t._v("，以及确定把哪个task加入调用栈的这个过程就是"),a("strong",[t._v("事件循环")]),t._v("，而JS"),a("strong",[t._v("实现异步的核心就是事件循环")]),t._v("。")]),t._v(" "),a("p",[a("a",{attrs:{name:"lmckp"}})]),t._v(" "),a("h2",{attrs:{id:"调用栈和任务队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调用栈和任务队列"}},[t._v("#")]),t._v(" 调用栈和任务队列")]),t._v(" "),a("p",[t._v("顾名思义，调用栈是一个栈结构 -- （栈的结构特点是什么？）函数调用会形成一个栈帧，帧中包含了当前执行函数的参数和局部变量等上下文信息，函数执行完后，它的执行上下文会从栈中弹出\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1024167/1604564498265-62ab952d-5b96-4c3c-94de-0fcb111f7d4e.png#align=left&display=inline&height=837&margin=%5Bobject%20Object%5D&name=image.png&originHeight=837&originWidth=989&size=268521&status=done&style=none&width=989",alt:"image.png"}})]),t._v(" "),a("p",[a("a",{attrs:{name:"QzZ6N"}})]),t._v(" "),a("h2",{attrs:{id:"事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件循环"}},[t._v("#")]),t._v(" 事件循环")]),t._v(" "),a("p",[t._v("关于事件循环，"),a("a",{attrs:{href:"https://www.w3.org/TR/html5/webappapis.html#event-loop",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTML规范"),a("OutboundLink")],1),t._v("的介绍\n从规范理解，浏览器至少有一个事件循环，一个事件循环至少有一个任务队列（macrotask），每个外任务都有自己的分组，浏览器会为不同的任务组设置优先级")]),t._v(" "),a("p",[a("a",{attrs:{name:"macrotask--microtask"}})]),t._v(" "),a("h3",{attrs:{id:"macrotask-microtask"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#macrotask-microtask"}},[t._v("#")]),t._v(" macrotask  & microtask")]),t._v(" "),a("p",[a("strong",[t._v("macrotask")]),t._v("：（宏任务）包含执行整体的js代码，事件回调，XHR回调，定时器（ "),a("code",[t._v("setTimeout ``setInterval")]),t._v(" "),a("code",[t._v("setImmediate")]),t._v("，IO操作，UI render\n"),a("strong",[t._v("microtask")]),t._v("：（微任务）更新应用程序状态的任务，包括"),a("code",[t._v("promise")]),t._v("回调，"),a("code",[t._v("MutationObserver")]),t._v("，"),a("code",[t._v("process.nextTick")]),t._v("，"),a("code",[t._v("Object.observe")]),t._v("\n_\n"),a("strong",[a("em",[t._v("Promise中的同步异步")])]),t._v(" "),a("strong",[t._v("1.new Promise的时候，传递的executor函数一定是立即执行（同步）")]),t._v(" "),a("strong",[t._v("2.基于then或者catch存放的方法执行是异步的")]),t._v(" "),a("strong",[t._v("3.async/await 也是异步的")])]),t._v(" "),a("p",[t._v("其中"),a("code",[t._v("setImmediate")]),t._v("和"),a("code",[t._v("process.nextTick")]),t._v("是nodejs的实现")]),t._v(" "),a("p",[a("a",{attrs:{name:"BppIT"}})]),t._v(" "),a("h3",{attrs:{id:"事件处理过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件处理过程"}},[t._v("#")]),t._v(" 事件处理过程")]),t._v(" "),a("p",[t._v("Event loop基于两个基本原则：")]),t._v(" "),a("ul",[a("li",[t._v("同一时间只能执行一个任务")]),t._v(" "),a("li",[t._v("任务一直执行到完成，不能被其他任务抢断")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1024167/1604564498356-f33c4dae-c600-4025-a39b-85beed79d9c5.png#align=left&display=inline&height=530&margin=%5Bobject%20Object%5D&name=image.png&originHeight=530&originWidth=471&size=84074&status=done&style=none&width=471",alt:"image.png"}})]),t._v(" "),a("ol",[a("li",[t._v("检查macrotask队列是否为空，非空则到2，为空则到3")]),t._v(" "),a("li",[t._v("执行macrotask中的一个任务")]),t._v(" "),a("li",[t._v("继续检查microtask队列是否为空，若有则到4，否则到5")]),t._v(" "),a("li",[t._v("取出microtask中的任务执行，执行完成返回到步骤3")]),t._v(" "),a("li",[t._v("执行视图更新")])]),t._v(" "),a("p",[t._v("概念这么多  是不是脑壳大 ？？？ 看段代码  放松一下  输出什么？？？")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'start'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setTimeout'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nPromise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'promise1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'promise2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("p",[t._v("首先，全局代码（main()）压入调用栈执行，打印"),a("code",[t._v("start")]),t._v("；\n接下来setTimeout压入macrotask队列，promise.then回调放入microtask队列，最后执行console.log(‘end’)，打印出"),a("code",[t._v("end")]),t._v("；\n至此，调用栈中的代码被执行完成，回顾macrotask的定义，我们知道全局代码属于macrotask，macrotask执行完，那接下来就是执行microtask队列的任务了，执行promise回调打印"),a("code",[t._v("promise1")]),t._v("；\npromise回调函数默认返回undefined，promise状态变为fullfill触发接下来的then回调，继续压入microtask队列，"),a("strong",[t._v("event loop会把当前的microtask队列一直执行完")]),t._v("，此时执行第二个promise.then回调打印出"),a("code",[t._v("promise2")]),t._v("；\n这时microtask队列已经为空，从上面的流程图可以知道，接下来主线程会去做一些UI渲染工作（不一定会做），然后开始下一轮event loop，执行setTimeout的回调，打印出"),a("code",[t._v("setTimeout")]),t._v("；\n这个过程会不断重复，也就是所谓的"),a("strong",[t._v("事件循环")]),t._v("。\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/gif/1024167/1604564498299-4e954ed8-7feb-4400-9500-72fe081ba62e.gif#align=left&display=inline&height=448&margin=%5Bobject%20Object%5D&name=browser-deom1-excute-animate%5B1%5D.gif&originHeight=448&originWidth=806&size=213519&status=done&style=none&width=806",alt:"browser-deom1-excute-animate[1].gif"}})]),t._v(" "),a("p",[a("a",{attrs:{name:"2dxfR"}})]),t._v(" "),a("h3",{attrs:{id:"视图渲染的时机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#视图渲染的时机"}},[t._v("#")]),t._v(" 视图渲染的时机")]),t._v(" "),a("p",[t._v("视图渲染 发生在本轮事件循环的microtask队列被执行完之后，也就是说执行任务的耗时会影响视图渲染的时机。通常浏览器以每秒60帧（60fps）的速率刷新页面，据说这个帧率最适合人眼交互，大概16.7ms渲染一帧，所以如果要让用户觉得顺畅，单个macrotask及它相关的所有microtask最好能在16.7ms内完成")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1s 60\n1000ms / 60 ~= 16.7 ms\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("但也不是每轮事件循环都会执行视图更新，浏览器有自己的优化策略，例如把几次的视图更新累积到一起重绘，重绘之前会通知"),a("code",[t._v("requestAnimationFrame")]),t._v("执行回调函数，也就是说"),a("code",[t._v("requestAnimationFrame")]),t._v("回调的执行时机是在一次或多次事件循环的UI render阶段。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'timer1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestAnimationFrame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'requestAnimationFrame'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'timer2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("executor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'promise 1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'promise 2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'promise then'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br")])]),a("p",[a("a",{attrs:{name:"UIMRe"}})]),t._v(" "),a("h1",{attrs:{id:"_3、总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、总结"}},[t._v("#")]),t._v(" 3、总结")]),t._v(" "),a("ol",[a("li",[t._v("浏览器是多进程多线程的，但是一个进程中只有一个JS解析线程，并且 和GUI渲染线程是互斥的")]),t._v(" "),a("li",[t._v("同步和异步的区别")]),t._v(" "),a("li",[t._v("事件循环是js实现异步的核心")]),t._v(" "),a("li",[t._v("每轮事件循环分为3个步骤：")])]),t._v(" "),a("p",[t._v("a) 执行macrotask队列的一个任务\nb) 执行完当前microtask队列的所有任务\nc) UI render")])])}),[],!1,null,null,null);s.default=e.exports}}]);